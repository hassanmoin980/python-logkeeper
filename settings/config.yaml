# logging_config.yaml
version: 1
disable_existing_loggers: False

formatters:
  standard:
    format: "%(asctime)s - [%(levelname)-10s] [%(error_code)-6s] [%(name)-10s] --> [ %(filename)s:%(lineno)d >> %(funcName)s() | %(threadName)s ]: %(message)s"
    datefmt: "%Y-%m-%d %H:%M:%S %Z"

  json:
    (): pythonjsonlogger.jsonlogger.JsonFormatter
    format: "%(asctime)s - [%(levelname)-10s] [%(error_code)-6s] [%(name)-10s] --> [ %(filename)s:%(lineno)d >> %(funcName)s() | %(threadName)s ]: %(message)s"
    datefmt: "%Y-%m-%d %H:%M:%S %Z"

  colored:
    (): colorlog.ColoredFormatter
    format: "%(log_color)s %(asctime)s - [%(levelname)-10s] [%(error_code)-6s] [%(name)-10s] --> [ %(filename)s:%(lineno)d >> %(funcName)s() | %(threadName)s ]: %(message)s"
    datefmt: "%Y-%m-%d %H:%M:%S %Z"
    log_colors:
      DEBUG: fg_cyan
      INFO: fg_green
      WARNING: fg_yellow
      ERROR: fg_red
      CRITICAL: fg_white,bg_red
    style: "%"

handlers:
  consoleHandler:
    class: logging.StreamHandler
    level: DEBUG
    formatter: colored
    stream: ext://sys.stdout

  rotatingFileHandler:
    class: logging.handlers.RotatingFileHandler
    level: WARNING
    formatter: standard
    filename: "./logs/output/app.log"
    maxBytes: 10485760 # 10MB
    backupCount: 10
    encoding: "utf8"
    delay: True

  jsonFileHandler:
    class: logging.handlers.RotatingFileHandler
    level: WARNING
    formatter: json
    filename: "./logs/output/app.log.jsonl"
    maxBytes: 10485760 # 10MB
    backupCount: 10
    encoding: "utf8"
    delay: True

  queueHandler:
    class: logging.handlers.QueueHandler
    # This queueHandler delegates to multiple handlers below
    handlers:
      - consoleHandler
      # - rotatingFileHandler
      # - jsonFileHandler
    respect_handler_level: True

loggers:
  root:
    level: DEBUG
    handlers:
      - queueHandler
    propagate: False
